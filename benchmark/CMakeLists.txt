cmake_minimum_required(VERSION 3.10)

project(benchmark-madd
    LANGUAGES CXX
)
message(STATUS "Compiler ID: ${CMAKE_CXX_COMPILER_ID}")

#option(ENABLE_CUDA "enable cuda func benchmark" OFF)
if (ENABLE_CUDA)
    enable_language(CUDA)
endif ()

find_package(benchmark REQUIRED)
#find_package(madd REQUIRED)
#find_package(OpenBLAS REQUIRED)

add_executable(bench-rng rng.cpp)
target_link_libraries(bench-rng PUBLIC benchmark::benchmark benchmark::benchmark_main madd)

add_executable(bench-fft fft.cpp)
target_link_libraries(bench-fft PUBLIC benchmark::benchmark benchmark::benchmark_main madd)
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    target_link_libraries(bench-fft PUBLIC quadmath)
endif()
if (ENABLE_CUDA)
    target_compile_definitions(bench-fft PUBLIC ENABLE_CUDA)
    target_link_libraries(bench-fft PUBLIC benchmark::benchmark benchmark::benchmark_main madd cudart_static cublas cusolver cufft)
endif ()

add_executable(bench-linalg-eigen linalg-eigen.cpp)
target_link_libraries(bench-linalg-eigen PUBLIC benchmark::benchmark benchmark::benchmark_main madd ${OpenBLAS_LIBRARY})
target_link_directories(bench-linalg-eigen PUBLIC ${OpenBLAS_INCLUDE_DIRS})
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" OR ${CMAKE_HOST_SYSTEM_NAME} MATCHES "Linux")
    target_link_libraries(bench-linalg-eigen PUBLIC gfortran)
endif()
if (ENABLE_CUDA)
    if (${CUDA_VERSION} VERSION_GREATER_EQUAL 12.6)
        target_compile_definitions(bench-linalg-eigen PUBLIC CUDA_12_6)
        target_link_libraries(bench-linalg-eigen PUBLIC cudart_static cusolver)
    endif ()
endif ()

add_executable(bench-linalg-linear-equations linalg-linear-equations.cpp)
target_link_libraries(bench-linalg-linear-equations PUBLIC benchmark::benchmark benchmark::benchmark_main madd ${OpenBLAS_LIBRARY})
target_link_directories(bench-linalg-linear-equations PUBLIC ${OpenBLAS_INCLUDE_DIRS})
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" OR ${CMAKE_HOST_SYSTEM_NAME} MATCHES "Linux")
    target_link_libraries(bench-linalg-linear-equations PUBLIC gfortran)
endif()
if (ENABLE_CUDA)
    target_compile_definitions(bench-linalg-linear-equations PUBLIC ENABLE_CUDA)
    target_link_libraries(bench-linalg-linear-equations PUBLIC cudart_static cusolver)
    if (${CUDA_VERSION} VERSION_GREATER_EQUAL 11.1)
        target_compile_definitions(bench-linalg-linear-equations PUBLIC CUDA_11_1)
    endif ()
endif ()

add_executable(bench-sort sort.cpp)
target_link_libraries(bench-sort PUBLIC benchmark::benchmark benchmark::benchmark_main madd)
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    target_link_libraries(bench-sort PUBLIC quadmath)
endif()